name: Deploy to Fly

on:
  push:
    branches: [main]
    paths:
      - "server/**"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🎙 Discord notification 1/3
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: "Mave-metrics release started ⏳"

      - name: 🛑 Cancel previous runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 🔑 Install Fly cli
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: 🚀 Build & deploy to Fly
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        working-directory: server

      - name: Fetch all tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Determine new version tag
        id: versioning
        run: |
          LATEST_TAG=$(git tag -l "server-v*" --sort=-v:refname | head -n 1)
          echo "Latest server tag: $LATEST_TAG"
          if [[ "$LATEST_TAG" == "" ]]; then LATEST_TAG="server-v0.0.0"; fi
          PARTS=(${LATEST_TAG//./ })
          VNUM=${PARTS[2]}
          ((VNUM++))
          NEW_TAG="server-v${PARTS[0]}.${PARTS[1]}.$VNUM"
          echo "New tag: $NEW_TAG"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          echo "::set-output name=new_tag::$NEW_TAG"

      - name: 🎙 Discord notification 2/3
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: "Mave-metrics ${{ steps.release.outputs.new_tag }} has been deployed 🚀"

      - name: 🎙 Discord notification 3/3
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master

      - name: Create and push new t]ag
        run: |
          git tag ${{ env.NEW_TAG }}
          git push origin ${{ env.NEW_TAG }}
